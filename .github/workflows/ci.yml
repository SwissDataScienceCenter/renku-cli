name: ci

on:
  pull_request:
  push:
      branches:
        - main

concurrency:
  group: ci-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  check-linux:
    name: "check linux"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install nix
        uses: cachix/install-nix-action@V27
        with:
          extra_nix_config: access-tokens = github.com=${{ github.token }}

      - name: Check nix formatting
        run: nix fmt -- -c .

      - name: Set up cachix
        uses: cachix/cachix-action@v15
        with:
          name: nix-community

      - name: Build with nix and run checks
        run: |
          nix flake check --print-build-logs

  check-macos:
    name: "check macos"
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install nix
        uses: cachix/install-nix-action@V27
        with:
          extra_nix_config: access-tokens = github.com=${{ github.token }}

      - name: Check nix formatting
        run: nix fmt -- -c .

      - name: Set up cachix
        uses: cachix/cachix-action@v15
        with:
          name: nix-community

      - name: Build with nix and run checks
        run: |
          nix flake check --print-build-logs

  check-win:
    name: "check windows"
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          default: true
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --features user-doc
      - name: User Docs
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: --release --features user-doc -- user-doc ./docs

  # check installer on main only, as we reach the github api limit too
  # quickly
  check-installer:
    name: "check installer"
    runs-on: ${{ matrix.os }}
    if: github.ref == 'refs/heads/main'
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run installer
        run: ./install.sh -v

      - name: Run binary
        run: rnk --version

  ci:
    runs-on: ubuntu-latest
    needs: [check-macos, check-linux, check-win, check-installer]
    steps:
      - name: Aggregate of lint, and all tests
        run: echo "ci passed"
